{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    color: #fff;\\n    background-color: rgb(220, 0, 78);\\n    margin: 8px;\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n    margin-bottom: 10px;\\n    text-align: center;\\n    position: absolute;\\n    bottom: 10px;\\n    left: 8%;\\n\\n    padding: 6px 16px;\\n    font-size: 0.875rem;\\n    min-width: 64px;\\n    width: 80%;\\n    box-sizing: border-box;\\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\\n    font-weight: 500;\\n    line-height: 1.75;\\n    border-radius: 4px;\\n    letter-spacing: 0.02857em;\\n    text-transform: uppercase;\\n    cursor: pointer;\\n\\n    :hover {\\n        background-color: rgb(154, 0, 54);\\n        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n\\n    font-size: 1.5rem;\\n    margin-bottom: 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 50px;\\n    border-radius: 3px;\\n    padding: 5px 10px;\\n    background: #cacaca;\\n\\n    position: absolute;\\n    bottom: 70px;\\n    left: 10%;\\n    right: 10%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    /* padding-bottom: 120px; */\\n    width: 33%;\\n    height: auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background: #ddd;\\n    border-radius: 3px;\\n    padding: 15px;\\n    cursor: pointer;\\n    transition: box-shadow 0.1s;\\n    overflow: hidden;\\n    position: relative;\\n\\n    :hover {\\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { getPostsData } from '../lib/api';\nimport styled from 'styled-components';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 345\n    },\n    paper: {\n      height: 140,\n      width: 100\n    },\n    control: {\n      padding: theme.spacing(2)\n    }\n  });\n});\n{\n  /* <Post key={id}>\r\n                          <PostContent>\r\n                              <Title>\r\n                                  <div>{title}</div>\r\n                              </Title>\r\n                                <BodyPost>{body}</BodyPost>\r\n                                <Comment>\r\n                                  {comments && comments.body !== ' ' && comments.body !== ''\r\n                                      ? comments.body\r\n                                      : 'no comment'}\r\n                              </Comment>\r\n                          </PostContent>\r\n                          <div>\r\n                              <BtnDel onClick={dellPost.bind(this, id)}>DELETE</BtnDel>\r\n                          </div>\r\n                      </Post> */\n}\n\nvar Posts = function Posts(_ref) {\n  _s();\n\n  var allPostsData = _ref.allPostsData;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(2),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      spacing = _React$useState2[0],\n      setSpacing = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setSpacing(Number(event.target.value));\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: spacing\n  }, [0, 1, 2].map(function (value) {\n    return __jsx(Grid, {\n      key: value,\n      item: true\n    }, __jsx(Paper, {\n      className: classes.paper\n    }));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Paper, {\n    className: classes.control\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(FormLabel, null, \"spacing\"), __jsx(RadioGroup, {\n    name: \"spacing\",\n    \"aria-label\": \"spacing\",\n    value: spacing.toString(),\n    onChange: handleChange,\n    row: true\n  }, allPostsData.map(function (id, body, title, comments) {\n    return __jsx(FormControlLabel, {\n      key: id,\n      value: title.toString(),\n      control: __jsx(Radio, null),\n      label: title.toString()\n    });\n  })))))));\n};\n\n_s(Posts, \"B26zb85bsbFhpQKBPOBO0NZTars=\", false, function () {\n  return [useStyles];\n});\n\n_c = Posts;\nvar Post = styled.div(_templateObject());\nvar PostContent = styled.div(_templateObject2());\nvar Comment = styled.div(_templateObject3());\nvar Title = styled.div(_templateObject4());\nvar BtnDel = styled.div(_templateObject5());\nvar BodyPost = styled.div(_templateObject6());\nexport var getServerSideProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var allPostsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getPostsData();\n\n          case 2:\n            allPostsData = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                allPostsData: allPostsData\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getServerSideProps(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Project/testDevelopsToday/src/components/post.tsx"],"names":["getPostsData","styled","makeStyles","createStyles","Grid","FormLabel","FormControlLabel","RadioGroup","Radio","Paper","useStyles","theme","root","flexGrow","maxWidth","paper","height","width","control","padding","spacing","Posts","allPostsData","classes","React","useState","setSpacing","handleChange","event","Number","target","value","map","toString","id","body","title","comments","Post","div","PostContent","Comment","Title","BtnDel","BodyPost","getServerSideProps","context","props"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { GetServerSideProps } from 'next';\r\n\r\nimport { getPostsData } from '../lib/api';\r\n\r\nimport { dellPost } from '../lib/api';\r\nimport styled from 'styled-components';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 345,\r\n    },\r\n    paper: {\r\n      height: 140,\r\n      width: 100,\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n{\r\n    /* <Post key={id}>\r\n                            <PostContent>\r\n                                <Title>\r\n                                    <div>{title}</div>\r\n                                </Title>\r\n\r\n                                <BodyPost>{body}</BodyPost>\r\n\r\n                                <Comment>\r\n                                    {comments && comments.body !== ' ' && comments.body !== ''\r\n                                        ? comments.body\r\n                                        : 'no comment'}\r\n                                </Comment>\r\n                            </PostContent>\r\n                            <div>\r\n                                <BtnDel onClick={dellPost.bind(this, id)}>DELETE</BtnDel>\r\n                            </div>\r\n                        </Post> */\r\n}\r\n\r\nconst Posts = ({ allPostsData }) => {\r\n    const classes = useStyles();\r\n\r\n    const [spacing, setSpacing] = React.useState<GridSpacing>(2);\r\n\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSpacing(Number((event.target as HTMLInputElement).value) as GridSpacing);\r\n  };\r\n\r\n    return (\r\n        <Grid container className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={spacing}>\r\n          {[0, 1, 2].map((value) => (\r\n            <Grid key={value} item>\r\n              <Paper className={classes.paper} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.control}>\r\n          <Grid container>\r\n            <Grid item>\r\n              <FormLabel>spacing</FormLabel>\r\n              <RadioGroup\r\n                name=\"spacing\"\r\n                aria-label=\"spacing\"\r\n                value={spacing.toString()}\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                {allPostsData.map(( id, body, title, comments) => (\r\n                  <FormControlLabel\r\n                    key={id}\r\n                    value={title.toString()}\r\n                    control={<Radio />}\r\n                    label={title.toString()}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n    );\r\n};\r\n\r\n\r\n\r\nconst Post = styled.div`\r\n    background: #ddd;\r\n    border-radius: 3px;\r\n    padding: 15px;\r\n    cursor: pointer;\r\n    transition: box-shadow 0.1s;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    :hover {\r\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    /* padding-bottom: 120px; */\r\n    width: 33%;\r\n    height: auto;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n    margin-top: 50px;\r\n    border-radius: 3px;\r\n    padding: 5px 10px;\r\n    background: #cacaca;\r\n\r\n    position: absolute;\r\n    bottom: 70px;\r\n    left: 10%;\r\n    right: 10%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst BtnDel = styled.div`\r\n    color: #fff;\r\n    background-color: rgb(220, 0, 78);\r\n    margin: 8px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 8%;\r\n\r\n    padding: 6px 16px;\r\n    font-size: 0.875rem;\r\n    min-width: 64px;\r\n    width: 80%;\r\n    box-sizing: border-box;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.75;\r\n    border-radius: 4px;\r\n    letter-spacing: 0.02857em;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background-color: rgb(154, 0, 54);\r\n        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n`;\r\n\r\nconst BodyPost = styled.div``;\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n    const allPostsData = await getPostsData();\r\n    return {\r\n        props: {\r\n            allPostsData,\r\n        },\r\n    };\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}