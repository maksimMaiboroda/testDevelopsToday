{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: `https://simple-blog-api.crew.red/posts`,\n  responseType: 'json',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport async function getPostsData() {\n  const res = await apiClient.get('/');\n  return res.data;\n}\nexport async function dellPost(id) {\n  const res = await apiClient.delete(`${id}`);\n}\nexport async function addPost(postData) {\n  const res = await axios.post(`https://simple-blog-api.crew.red/posts`, _objectSpread({}, postData));\n}\nexport async function getAllPostIds() {\n  const res = await apiClient.get('/');\n  return res.data.map(post => {\n    return {\n      params: {\n        id: post.id\n      }\n    };\n  });\n}\nexport async function getPost(id) {\n  const res = await apiClient.get(`/${id}?_embed=comments`);\n  return _objectSpread({\n    id\n  }, res.data);\n}","map":null,"metadata":{},"sourceType":"module"}