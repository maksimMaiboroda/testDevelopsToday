{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: `https://simple-blog-api.crew.red/posts`,\n  responseType: 'json',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport async function getPostsData() {\n  const res = await apiClient.get('/');\n  return res.data;\n}\nexport async function dellPost(id) {\n  const res = await apiClient.delete(`${id}`);\n}\nexport async function addPost(postData) {\n  const res = await axios.post(`https://simple-blog-api.crew.red/posts`, _objectSpread({}, postData));\n}\nexport async function getAllPostIds() {\n  const res = await apiClient.get('/');\n  return res.data.map(post => {\n    return {\n      params: {\n        id: post.id\n      }\n    };\n  });\n}\nexport async function getPost(id) {\n  const res = await apiClient.get(`/${id}?_embed=comments`);\n  return _objectSpread({\n    id\n  }, res.data);\n}","map":{"version":3,"sources":["C:/Project/testDevelopsToday/src/lib/api.ts"],"names":["axios","apiClient","create","baseURL","responseType","headers","getPostsData","res","get","data","dellPost","id","delete","addPost","postData","post","getAllPostIds","map","params","getPost"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAG,wCADiB;AAE3BC,EAAAA,YAAY,EAAE,MAFa;AAG3BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHkB,CAAb,CAAlB;AAQA,OAAO,eAAeC,YAAf,GAA8B;AACjC,QAAMC,GAAG,GAAG,MAAMN,SAAS,CAACO,GAAV,CAAc,GAAd,CAAlB;AAEA,SAAOD,GAAG,CAACE,IAAX;AACH;AAED,OAAO,eAAeC,QAAf,CAAwBC,EAAxB,EAA4B;AAC/B,QAAMJ,GAAG,GAAG,MAAMN,SAAS,CAACW,MAAV,CAAkB,GAAED,EAAG,EAAvB,CAAlB;AACH;AAED,OAAO,eAAeE,OAAf,CAAuBC,QAAvB,EAAiC;AACpC,QAAMP,GAAG,GAAG,MAAMP,KAAK,CAACe,IAAN,CAAY,wCAAZ,oBAA0DD,QAA1D,EAAlB;AACH;AAED,OAAO,eAAeE,aAAf,GAA+B;AAClC,QAAMT,GAAG,GAAG,MAAMN,SAAS,CAACO,GAAV,CAAc,GAAd,CAAlB;AAEA,SAAOD,GAAG,CAACE,IAAJ,CAASQ,GAAT,CAAcF,IAAD,IAAU;AAC1B,WAAO;AACHG,MAAAA,MAAM,EAAE;AACJP,QAAAA,EAAE,EAAEI,IAAI,CAACJ;AADL;AADL,KAAP;AAKH,GANM,CAAP;AAOH;AAED,OAAO,eAAeQ,OAAf,CAAuBR,EAAvB,EAA2B;AAC9B,QAAMJ,GAAG,GAAG,MAAMN,SAAS,CAACO,GAAV,CAAe,IAAGG,EAAG,kBAArB,CAAlB;AAEA;AACIA,IAAAA;AADJ,KAEOJ,GAAG,CAACE,IAFX;AAIH","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: `https://simple-blog-api.crew.red/posts`,\r\n    responseType: 'json',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport async function getPostsData() {\r\n    const res = await apiClient.get('/');\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function dellPost(id) {\r\n    const res = await apiClient.delete(`${id}`);\r\n}\r\n\r\nexport async function addPost(postData) {\r\n    const res = await axios.post(`https://simple-blog-api.crew.red/posts`, { ...postData });\r\n}\r\n\r\nexport async function getAllPostIds() {\r\n    const res = await apiClient.get('/');\r\n\r\n    return res.data.map((post) => {\r\n        return {\r\n            params: {\r\n                id: post.id,\r\n            },\r\n        };\r\n    });\r\n}\r\n\r\nexport async function getPost(id) {\r\n    const res = await apiClient.get(`/${id}?_embed=comments`);\r\n\r\n    return {\r\n        id,\r\n        ...res.data,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}