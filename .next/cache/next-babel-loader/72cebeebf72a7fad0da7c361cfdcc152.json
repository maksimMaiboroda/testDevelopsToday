{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nvar apiClient = axios.create({\n  baseURL: \"https://simple-blog-api.crew.red/posts\",\n  responseType: 'json',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport function getPostsData() {\n  return _getPostsData.apply(this, arguments);\n}\n\nfunction _getPostsData() {\n  _getPostsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return apiClient.get('/');\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPostsData.apply(this, arguments);\n}\n\nexport function dellPost(_x) {\n  return _dellPost.apply(this, arguments);\n}\n\nfunction _dellPost() {\n  _dellPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return apiClient[\"delete\"](\"\".concat(id));\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _dellPost.apply(this, arguments);\n}\n\nexport function addPost(_x2) {\n  return _addPost.apply(this, arguments);\n}\n\nfunction _addPost() {\n  _addPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(postData) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.post(\"https://simple-blog-api.crew.red/posts\", _objectSpread({}, postData));\n\n          case 2:\n            res = _context3.sent;\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _addPost.apply(this, arguments);\n}\n\nexport function getAllPostIds() {\n  return _getAllPostIds.apply(this, arguments);\n}\n\nfunction _getAllPostIds() {\n  _getAllPostIds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return apiClient.get('/');\n\n          case 2:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res.data.map(function (post) {\n              return {\n                params: {\n                  id: post.id\n                }\n              };\n            }));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getAllPostIds.apply(this, arguments);\n}\n\nexport function getPost(_x3) {\n  return _getPost.apply(this, arguments);\n}\n\nfunction _getPost() {\n  _getPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return apiClient.get(\"/\".concat(id, \"?_embed=comments\"));\n\n          case 2:\n            res = _context5.sent;\n            return _context5.abrupt(\"return\", _objectSpread({\n              id: id\n            }, res.data));\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getPost.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Project/testDevelopsToday/src/lib/api.ts"],"names":["axios","apiClient","create","baseURL","responseType","headers","getPostsData","get","res","data","dellPost","id","addPost","postData","post","getAllPostIds","map","params","getPost"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,0CADoB;AAE3BC,EAAAA,YAAY,EAAE,MAFa;AAG3BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHkB,CAAb,CAAlB;AAQA,gBAAsBC,YAAtB;AAAA;AAAA;;;2EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeL,SAAS,CAACM,GAAV,CAAc,GAAd,CADf;;AAAA;AACGC,YAAAA,GADH;AAAA,6CAGIA,GAAG,CAACC,IAHR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO,kBAAwBC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeV,SAAS,UAAT,WAAoBU,EAApB,EADf;;AAAA;AACGH,YAAAA,GADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,gBAAsBI,OAAtB;AAAA;AAAA;;;sEAAO,kBAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeb,KAAK,CAACc,IAAN,6DAA0DD,QAA1D,EADf;;AAAA;AACGL,YAAAA,GADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,gBAAsBO,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACed,SAAS,CAACM,GAAV,CAAc,GAAd,CADf;;AAAA;AACGC,YAAAA,GADH;AAAA,8CAGIA,GAAG,CAACC,IAAJ,CAASO,GAAT,CAAa,UAACF,IAAD,EAAU;AAC1B,qBAAO;AACHG,gBAAAA,MAAM,EAAE;AACJN,kBAAAA,EAAE,EAAEG,IAAI,CAACH;AADL;AADL,eAAP;AAKH,aANM,CAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYP,gBAAsBO,OAAtB;AAAA;AAAA;;;sEAAO,kBAAuBP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeV,SAAS,CAACM,GAAV,YAAkBI,EAAlB,sBADf;;AAAA;AACGH,YAAAA,GADH;AAAA;AAICG,cAAAA,EAAE,EAAFA;AAJD,eAKIH,GAAG,CAACC,IALR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: `https://simple-blog-api.crew.red/posts`,\r\n    responseType: 'json',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport async function getPostsData() {\r\n    const res = await apiClient.get('/');\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function dellPost(id) {\r\n    const res = await apiClient.delete(`${id}`);\r\n}\r\n\r\nexport async function addPost(postData) {\r\n    const res = await axios.post(`https://simple-blog-api.crew.red/posts`, { ...postData });\r\n}\r\n\r\nexport async function getAllPostIds() {\r\n    const res = await apiClient.get('/');\r\n\r\n    return res.data.map((post) => {\r\n        return {\r\n            params: {\r\n                id: post.id,\r\n            },\r\n        };\r\n    });\r\n}\r\n\r\nexport async function getPost(id) {\r\n    const res = await apiClient.get(`/${id}?_embed=comments`);\r\n\r\n    return {\r\n        id,\r\n        ...res.data,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}