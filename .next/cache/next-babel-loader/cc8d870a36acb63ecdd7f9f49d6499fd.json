{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { getPostsData } from '../../lib/posts';\nimport { dellPost } from '../../lib/posts';\nimport styled from 'styled-components';\n\nconst Posts = ({\n  allPostsData\n}) => {\n  return __jsx(\"div\", null, __jsx(Grid, null, allPostsData.map(({\n    id,\n    body,\n    title,\n    comments\n  }) => id && id !== ' ' && body && body !== ' ' && title && title !== ' ' ? __jsx(Post, {\n    key: id\n  }, __jsx(PostContent, null, __jsx(Title, null, __jsx(\"div\", null, title)), __jsx(BodyPost, null, body), __jsx(Comment, null, comments ? comments.body : 'no comment')), __jsx(\"div\", null, __jsx(BtnDel, {\n    onClick: dellPost.bind(this, id)\n  }, \"DELETE\"))) : null)));\n};\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-template-columns: 31% 31% 31%;\n    grid-gap: 2vw;\n`;\nconst Post = styled.div`\n    background: #ddd;\n    border-radius: 3px;\n    padding: 15px;\n    cursor: pointer;\n    transition: box-shadow 0.1s;\n    overflow: hidden;\n    position: relative;\n\n    :hover {\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n    }\n`;\nconst PostContent = styled.div`\n    padding-bottom: 100px;\n`;\nconst Comment = styled.div`\n    margin-top: 50px;\n    border-radius: 3px;\n    padding: 5px 10px;\n    background: #cacaca;\n\n    position: absolute;\n    bottom: 70px;\n    left: 10%;\n    right: 10%;\n`;\nconst Title = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    font-size: 1.5rem;\n    margin-bottom: 10px;\n`;\nconst BtnDel = styled.div`\n    color: #fff;\n    background-color: rgb(220, 0, 78);\n    margin: 8px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    margin-bottom: 10px;\n    text-align: center;\n    position: absolute;\n    bottom: 10px;\n    left: 8%;\n\n    padding: 6px 16px;\n    font-size: 0.875rem;\n    min-width: 64px;\n    width: 80%;\n    box-sizing: border-box;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n    font-weight: 500;\n    line-height: 1.75;\n    border-radius: 4px;\n    letter-spacing: 0.02857em;\n    text-transform: uppercase;\n    cursor: pointer;\n\n    :hover {\n        background-color: rgb(154, 0, 54);\n        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n`;\nconst BodyPost = styled.div``;\nexport async function getServerSideProps() {\n  const allPostsData = await getPostsData();\n  return {\n    props: {\n      allPostsData\n    }\n  };\n}\nexport default Posts;","map":{"version":3,"sources":["C:/Project/testDevelopsToday/src/pages/posts/post.tsx"],"names":["getPostsData","dellPost","styled","Posts","allPostsData","map","id","body","title","comments","bind","Grid","div","Post","PostContent","Comment","Title","BtnDel","BodyPost","getServerSideProps","props"],"mappings":";;AACA,SAASA,YAAT,QAA6B,iBAA7B;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAChC,SACI,mBACI,MAAC,IAAD,QACKA,YAAY,CAACC,GAAb,CAAiB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAD,KACdH,EAAE,IAAIA,EAAE,KAAK,GAAb,IAAoBC,IAApB,IAA4BA,IAAI,KAAK,GAArC,IAA4CC,KAA5C,IAAqDA,KAAK,KAAK,GAA/D,GACI,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEF;AAAX,KACI,MAAC,WAAD,QACI,MAAC,KAAD,QACI,mBAAME,KAAN,CADJ,CADJ,EAKI,MAAC,QAAD,QAAWD,IAAX,CALJ,EAOI,MAAC,OAAD,QAAUE,QAAQ,GAAGA,QAAQ,CAACF,IAAZ,GAAmB,YAArC,CAPJ,CADJ,EAUI,mBACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,QAAQ,CAACS,IAAT,CAAc,IAAd,EAAoBJ,EAApB;AAAjB,cADJ,CAVJ,CADJ,GAeI,IAhBP,CADL,CADJ,CADJ;AAwBH,CAzBD;;AA2BA,MAAMK,IAAI,GAAGT,MAAM,CAACU,GAAI;;;;;CAAxB;AAOA,MAAMC,IAAI,GAAGX,MAAM,CAACU,GAAI;;;;;;;;;;;;CAAxB;AAcA,MAAME,WAAW,GAAGZ,MAAM,CAACU,GAAI;;CAA/B;AAIA,MAAMG,OAAO,GAAGb,MAAM,CAACU,GAAI;;;;;;;;;;CAA3B;AAYA,MAAMI,KAAK,GAAGd,MAAM,CAACU,GAAI;;;;;;;CAAzB;AASA,MAAMK,MAAM,GAAGf,MAAM,CAACU,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA1B;AAkCA,MAAMM,QAAQ,GAAGhB,MAAM,CAACU,GAAI,EAA5B;AAEA,OAAO,eAAeO,kBAAf,GAAoC;AACvC,QAAMf,YAAY,GAAG,MAAMJ,YAAY,EAAvC;AACA,SAAO;AACHoB,IAAAA,KAAK,EAAE;AACHhB,MAAAA;AADG;AADJ,GAAP;AAKH;AAED,eAAeD,KAAf","sourcesContent":["import Link from 'next/link';\r\nimport { getPostsData } from '../../lib/posts';\r\n\r\nimport { dellPost } from '../../lib/posts';\r\nimport styled from 'styled-components';\r\n\r\nconst Posts = ({ allPostsData }) => {\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                {allPostsData.map(({ id, body, title, comments }) =>\r\n                    id && id !== ' ' && body && body !== ' ' && title && title !== ' ' ? (\r\n                        <Post key={id}>\r\n                            <PostContent>\r\n                                <Title>\r\n                                    <div>{title}</div>\r\n                                </Title>\r\n\r\n                                <BodyPost>{body}</BodyPost>\r\n\r\n                                <Comment>{comments ? comments.body : 'no comment'}</Comment>\r\n                            </PostContent>\r\n                            <div>\r\n                                <BtnDel onClick={dellPost.bind(this, id)}>DELETE</BtnDel>\r\n                            </div>\r\n                        </Post>\r\n                    ) : null,\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Grid = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n    grid-template-columns: 31% 31% 31%;\r\n    grid-gap: 2vw;\r\n`;\r\n\r\nconst Post = styled.div`\r\n    background: #ddd;\r\n    border-radius: 3px;\r\n    padding: 15px;\r\n    cursor: pointer;\r\n    transition: box-shadow 0.1s;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    :hover {\r\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    padding-bottom: 100px;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n    margin-top: 50px;\r\n    border-radius: 3px;\r\n    padding: 5px 10px;\r\n    background: #cacaca;\r\n\r\n    position: absolute;\r\n    bottom: 70px;\r\n    left: 10%;\r\n    right: 10%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst BtnDel = styled.div`\r\n    color: #fff;\r\n    background-color: rgb(220, 0, 78);\r\n    margin: 8px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 8%;\r\n\r\n    padding: 6px 16px;\r\n    font-size: 0.875rem;\r\n    min-width: 64px;\r\n    width: 80%;\r\n    box-sizing: border-box;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.75;\r\n    border-radius: 4px;\r\n    letter-spacing: 0.02857em;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background-color: rgb(154, 0, 54);\r\n        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n`;\r\n\r\nconst BodyPost = styled.div``;\r\n\r\nexport async function getServerSideProps() {\r\n    const allPostsData = await getPostsData();\r\n    return {\r\n        props: {\r\n            allPostsData,\r\n        },\r\n    };\r\n}\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}