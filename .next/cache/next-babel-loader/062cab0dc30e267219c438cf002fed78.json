{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    color: #fff;\\n    background-color: rgb(220, 0, 78);\\n    margin: 8px;\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n    margin-bottom: 10px;\\n    text-align: center;\\n    position: absolute;\\n    bottom: 10px;\\n    left: 8%;\\n\\n    padding: 6px 16px;\\n    font-size: 0.875rem;\\n    min-width: 64px;\\n    width: 80%;\\n    box-sizing: border-box;\\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\\n    font-weight: 500;\\n    line-height: 1.75;\\n    border-radius: 4px;\\n    letter-spacing: 0.02857em;\\n    text-transform: uppercase;\\n    cursor: pointer;\\n\\n    :hover {\\n        background-color: rgb(154, 0, 54);\\n        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n\\n    font-size: 1.5rem;\\n    margin-bottom: 10px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 50px;\\n    border-radius: 3px;\\n    padding: 5px 10px;\\n    background: #cacaca;\\n\\n    position: absolute;\\n    bottom: 70px;\\n    left: 10%;\\n    right: 10%;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    /* padding-bottom: 120px; */\\n    width: 33%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    background: #ddd;\\n    border-radius: 3px;\\n    padding: 15px;\\n    cursor: pointer;\\n    transition: box-shadow 0.1s;\\n    overflow: hidden;\\n    position: relative;\\n\\n    :hover {\\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    /* display: grid;\\n    grid-template-rows: 1fr 1fr 1fr;\\n    grid-template-columns: 31% 31% 31%;\\n    grid-gap: 2vw; */\\n\\n    display: flex;\\n    flex-wrap: wrap;\\n    flex-direction: row;\\n    justify-content: space-around;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { getPostsData } from '../lib/api';\nimport { dellPost } from '../lib/api';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nvar useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n{\n  /* <Post key={id}>\r\n                          <PostContent>\r\n                              <Title>\r\n                                  <div>{title}</div>\r\n                              </Title>\r\n                                <BodyPost>{body}</BodyPost>\r\n                                <Comment>\r\n                                  {comments && comments.body !== ' ' && comments.body !== ''\r\n                                      ? comments.body\r\n                                      : 'no comment'}\r\n                              </Comment>\r\n                          </PostContent>\r\n                          <div>\r\n                              <BtnDel onClick={dellPost.bind(this, id)}>DELETE</BtnDel>\r\n                          </div>\r\n                      </Post> */\n}\n\nvar Posts = function Posts(_ref) {\n  _s();\n\n  var allPostsData = _ref.allPostsData;\n  var classes = useStyles();\n  return __jsx(\"div\", null, __jsx(Grid, null, allPostsData.map(function (_ref2) {\n    var id = _ref2.id,\n        body = _ref2.body,\n        title = _ref2.title,\n        comments = _ref2.comments;\n    return id && id !== ' ' && body && body !== ' ' && title && title !== ' ' ? __jsx(PostContent, null, __jsx(Card, {\n      className: classes.root\n    }, __jsx(CardActionArea, null, __jsx(CardMedia, {\n      className: classes.media,\n      image: \"/static/images/cards/contemplative-reptile.jpg\",\n      title: \"Contemplative Reptile\"\n    }), __jsx(CardContent, null, __jsx(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\"\n    }, title), __jsx(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\"\n    }, body))), __jsx(CardActions, null, __jsx(Button, {\n      onClick: dellPost.bind(_this, id),\n      size: \"small\",\n      color: \"primary\"\n    }, \"Delete\")))) : null;\n  })));\n};\n\n_s(Posts, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Posts;\nvar Grid = styled.div(_templateObject());\n_c2 = Grid;\nvar Post = styled.div(_templateObject2());\nvar PostContent = styled.div(_templateObject3());\n_c3 = PostContent;\nvar Comment = styled.div(_templateObject4());\nvar Title = styled.div(_templateObject5());\nvar BtnDel = styled.div(_templateObject6());\nvar BodyPost = styled.div(_templateObject7());\nexport var getServerSideProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var allPostsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getPostsData();\n\n          case 2:\n            allPostsData = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                allPostsData: allPostsData\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getServerSideProps(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport default Posts;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"PostContent\");","map":{"version":3,"sources":["C:/Project/testDevelopsToday/src/components/post.tsx"],"names":["getPostsData","dellPost","styled","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useStyles","root","maxWidth","media","height","Posts","allPostsData","classes","map","id","body","title","comments","bind","Grid","div","Post","PostContent","Comment","Title","BtnDel","BodyPost","getServerSideProps","context","props"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { GetServerSideProps } from 'next';\r\n\r\nimport { getPostsData } from '../lib/api';\r\n\r\nimport { dellPost } from '../lib/api';\r\nimport styled from 'styled-components';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\n{\r\n    /* <Post key={id}>\r\n                            <PostContent>\r\n                                <Title>\r\n                                    <div>{title}</div>\r\n                                </Title>\r\n\r\n                                <BodyPost>{body}</BodyPost>\r\n\r\n                                <Comment>\r\n                                    {comments && comments.body !== ' ' && comments.body !== ''\r\n                                        ? comments.body\r\n                                        : 'no comment'}\r\n                                </Comment>\r\n                            </PostContent>\r\n                            <div>\r\n                                <BtnDel onClick={dellPost.bind(this, id)}>DELETE</BtnDel>\r\n                            </div>\r\n                        </Post> */\r\n}\r\n\r\nconst Posts = ({ allPostsData }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                {allPostsData.map(({ id, body, title, comments }) =>\r\n                    id && id !== ' ' && body && body !== ' ' && title && title !== ' ' ? (\r\n                        <PostContent>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {body}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions>\r\n                                    <Button onClick={dellPost.bind(this, id)} size=\"small\" color=\"primary\">\r\n                                        Delete\r\n                                    </Button>\r\n                                    \r\n                                </CardActions>\r\n                            </Card>\r\n                        </PostContent>\r\n                    ) : null,\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Grid = styled.div`\r\n    /* display: grid;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n    grid-template-columns: 31% 31% 31%;\r\n    grid-gap: 2vw; */\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst Post = styled.div`\r\n    background: #ddd;\r\n    border-radius: 3px;\r\n    padding: 15px;\r\n    cursor: pointer;\r\n    transition: box-shadow 0.1s;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    :hover {\r\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    /* padding-bottom: 120px; */\r\n    width: 33%;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n    margin-top: 50px;\r\n    border-radius: 3px;\r\n    padding: 5px 10px;\r\n    background: #cacaca;\r\n\r\n    position: absolute;\r\n    bottom: 70px;\r\n    left: 10%;\r\n    right: 10%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst BtnDel = styled.div`\r\n    color: #fff;\r\n    background-color: rgb(220, 0, 78);\r\n    margin: 8px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 8%;\r\n\r\n    padding: 6px 16px;\r\n    font-size: 0.875rem;\r\n    min-width: 64px;\r\n    width: 80%;\r\n    box-sizing: border-box;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n        box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.75;\r\n    border-radius: 4px;\r\n    letter-spacing: 0.02857em;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background-color: rgb(154, 0, 54);\r\n        box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n`;\r\n\r\nconst BodyPost = styled.div``;\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n    const allPostsData = await getPostsData();\r\n    return {\r\n        props: {\r\n            allPostsData,\r\n        },\r\n    };\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}